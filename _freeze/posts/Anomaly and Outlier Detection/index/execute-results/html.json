{
  "hash": "caba998a749a53035c2416928f52f4ca",
  "result": {
    "markdown": "---\ntitle: \"Anomaly and Outlier Detection\"\nauthor: \"Julia Gutgesell\"\ndate: \"2023-11-24\"\n---\n\n\nAnomaly and Outlier Detection are important steps of machine learning because without proper detection, we may be creating models that do not correctly model the population.\n\n**Anomalies** are data points which do not follow the expected pattern/distribution that the rest of the data follows. Anomalies are important because they can translate into relevant information in many cases. For example, if we are looking at all credit card transactions, fraudulent transactions may be caught with anomaly detection since they could be unusual amounts or going to unusual businesses. Through anomaly detection we may be able to find new features to add to the model or a new model.\n\n**Outliers** are observations that have a rare chance of occurring within the dataset because they are far from the other points. Outliers can occur because of human or experimental error, but sometimes we do not know the reason for the outlier. Outlier detection is important because outliers can skew our model and affect the accuracy for future predictions.\n\nOne method that is used for outlier detection is **DBSCAN -** Density-Based Spacial Clustering of Applications With Noise. In order for a point to be considered in the clustering algorithm it must be within a radius of a core point (one with a minimum number of points in its radius). If this condition is not satisfied, DBSCAN will exclude the point - marking it as an outlier. We will use the multishapes dataset to show this concept.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dbscan)\nlibrary(factoextra)\nset.seed(123456789)\nmultishapes <- multishapes[, 1:2]\nplot(multishapes)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\nIt is hard for us to know which of these points are going to be outliers, and it is not a good idea to remove outliers for no reason. A model that is robust to outliers is DBSCAN since it only includes points that have a minimum number of points, at least 3, in a radius surrounding the point.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndbscan_res <- dbscan(multishapes, eps = 0.15, minPts = 5)\nplot(multishapes, col=dbscan_res$cluster+1, main=\"DBSCAN\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nAll the points in black are considered outliers. We can see that some of the points we may have initially thought were outliers are, but there are some points that could have been hard to indentify just using the human eye. We need methods like these to do outlier detection since it is not advised to delete outliers, and we do not want our outliers to make our models inaccurate.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}