{
  "hash": "5204ac200a182d806c7e3eb7ffdc9e26",
  "result": {
    "markdown": "---\ntitle: \"Linear and Nonlinear Regression\"\nauthor: \"Julia Gutgesell\"\ndate: \"2023-11-22\"\n---\n\n\n**Linear Regression**\n\nLinear regression is the process of creating a line that best fits the data that can be used to predict the value of the response variable for new data. \n\n\nIf we want to fit a linear model to our data it is important that we make sure that there is a linear relationship to model. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nggplot(cars, aes(x=speed, y=dist)) + geom_point() + theme_bw() +\n  labs(title = \"The Stopping Distance of Cars\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\nIn this example of stopping distances of cars at different speeds, we can use a scatterplot to visualize the data first to see that we have a linear relationship that can be modeled. When we have more than just 2 variables that we are considering to use in our model we can use a scatterplot matrix to visualize all the scatterplots at once. \n\nAnother tool to determine the linear association between two variables is **correlation**. The closer that the correlation coefficient **r** is to -1 or 1, the stronger the linear relationship. Something to keep in mind is that correlation is not a complete indicator of a relationship between the variables. If there is a polynomial relationship the correlation will be low, as well as outliers can make it seem like there is a linear relationship when there is not. \n\n\n**Regression Equations**\n\nIf we see that there is a linear relationship that we can model, the next step is to estimate that line, called the least-squares or fitted regression line.\n\nThe true mean response variable $Y$ conditioned on $X$ can be written:\n\n$\\mu_{Y|X} = \\beta_0 + \\beta_1 X$\n\nThe statistical linear model, which looks at individual response variables $Y_i$ can be written:\n\n$Y_i = \\beta_0 + \\beta_1 X + \\varepsilon_i$\n\nWhere $\\beta_i$ is the true regression coefficients that are unknown and $\\varepsilon_i \\sim N(0,\\sigma^2)$ is the random error or residuals. \n\n**Finding Regression Line in R**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel <- lm(dist ~ speed, data=cars)\nmodel$coefficients\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n(Intercept)       speed \n -17.579095    3.932409 \n```\n:::\n:::\n\n\nThe line that our linear model found is **Distance = -17.6 + 3.9 Speed**.\n\nWe can plot our line over our data to see how well it fits. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(cars, aes(x=speed, y=dist)) + geom_point() + theme_bw() +\n  geom_smooth(method = \"lm\", se = F) + labs(title = \"The Stopping Distance of Cars\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nIt looks like a decent fit, but we can also look at the full estimate table of our model to see our $R^2$ and the significance of our predictors.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(model)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = dist ~ speed, data = cars)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-29.069  -9.525  -2.272   9.215  43.201 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -17.5791     6.7584  -2.601   0.0123 *  \nspeed         3.9324     0.4155   9.464 1.49e-12 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 15.38 on 48 degrees of freedom\nMultiple R-squared:  0.6511,\tAdjusted R-squared:  0.6438 \nF-statistic: 89.57 on 1 and 48 DF,  p-value: 1.49e-12\n```\n:::\n:::\n\nWe see that speed is significant and we should use it in our model, later we will look at what to do if we find that some of our variables are not significant. Our $R^2$ means that 65% of the variance of stopping distance can be explained by speed.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}